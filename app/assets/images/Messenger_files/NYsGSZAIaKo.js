if (self.CavalryLogger) { CavalryLogger.start_js(["0Hftt"]); }

__d("MqttConnection",["MqttLogger","Random","paho-mqtt"],(function(a,b,c,d,e,f){"use strict";__p&&__p();var g=30,h="publish",i="subscribe",j=function(a){},k=18e4,l=21;function a(){this.$7=!1,this.$10=b("MqttLogger").getInstance(),this.$11="Disconnected",this.$16=new Set(),this.$17=new Set()}a.prototype.run=function(a){__p&&__p();var b=a.onStateChange,c=a.onError,d=a.onJSError,e=a.onMessageReceived,f=a.endpoint,g=a.deviceId,h=a.userFbid,i=a.appId;a=a.subscribedTopics;if(this.$7){this.$10.debugTrace("run","Run called while in running state.");return}this.$1=b;this.$2=c;this.$4=e;this.$5=f;this.$9=g;this.$12=h;this.$15=i;this.$7=!0;this.$13=0;this.$3=d||j;a&&a.forEach(function(a){return this.$16.add(a)}.bind(this));this.$18()};a.prototype.shutdown=function(){this.$19(),this.$7=!1,this.$10.debugTrace("shutdown","Shutdown")};a.prototype.subscribe=function(a){this.$16.add(a);if(!this.$20(i))return!1;else{this.$6.subscribe(a,{});this.$10.debugTrace("subscribe","Subscribing to "+a);return!0}};a.prototype.publish=function(a,b,c){var d=this.$20(h),e;!this.$7?(this.$17.add({topic:a,payload:b,qos:c}),e="buffered"):(this.$6.publish(a,b,c,!1),e="published");this.$10.logPublish({topic:a,qos:c,conn_state:d?1:0,status:e});return d};a.prototype.isRunning=function(){return this.$7};a.prototype.$19=function(){this.$7&&this.$6&&(this.$21("Disconnected"),this.$6.onMessageArrived=j,this.$6.onConnectionLost=j,this.$6.connectOptions&&(this.$6.connectOptions.onSuccess=j,this.$6.connectOptions.onFailure=j),this.$6.isConnected()&&this.$6.disconnect(),this.$6=null)};a.prototype.$21=function(a){a!==this.$11&&(this.$11=a,this.$1(a))};a.prototype.$18=function(){__p&&__p();if(!this.$7)return;this.$21("Connecting");try{this.$6=new(b("paho-mqtt").Client)(this.$5,"mqttwsclient");this.$8=this.$22();var a=Date.now(),c=Array.from(this.$16);this.$6.onConnectionLost=function(a){a.errorCode&&this.$10.logDisconnect({session:this.$8,errno:a.errorCode,err_str:a.errorMessage,session_duration:Date.now()-this.$14}),this.$23()}.bind(this);this.$6.onMessageArrived=function(a){this.$10.debugTrace("onMessageArrived","Message received on "+a.destinationName),this.$10.bumpCounter("message_arrived."+a.destinationName),this.$4(a.destinationName,a.payloadBytes)}.bind(this);this.$6.connect({userName:JSON.stringify({u:this.$12,s:this.$8,cp:1,ecp:0,chat_on:!0,fg:1,d:this.$24(),ct:"websocket",mqtt_sid:"",aid:this.$15,st:c,dc:""}),mqttVersion:3,password:"",keepAliveInterval:g,onFailure:function(b){__p&&__p();this.$10.debugTrace("connect","Connect failed "+b.errorMessage);this.$25("failed",Date.now()-a,c,b.errorCode,b.errorMessage);if(b&&b.connack){this.$10.bumpCounter("connect_failure."+b.connack);if(b.connack===l){this.$23(k);return}}this.$23()}.bind(this),onSuccess:function(){this.$10.debugTrace("connect","Connect success"),this.$25("success",Date.now()-a,c),this.$21("Connected"),this.$13=0,this.$14=Date.now(),this.$17.clear()}.bind(this),ignoreSubProtocol:!0,onSocketOpen:function(){return this.$26()}.bind(this),onSocketError:function(a){return this.$27()}.bind(this)})}catch(a){this.$21("Disconnected"),this.$27(a)}};a.prototype.$26=function(){this.$17.forEach(function(a){this.$6&&this.$6.publish(a.topic,a.payload,a.qos)}.bind(this))};a.prototype.$23=function(a){__p&&__p();a===void 0&&(a=null);if(!this.$7)return;this.$19();this.$8=-1;a=(a=a)!=null?a:Math.pow(2,Math.min(this.$13,9))*(1e3+Math.random()*200);this.$10.debugTrace("_scheduleReconnect","Reconnect in "+a+" ms");setTimeout(function(){return this.$18()}.bind(this),a);this.$13+=1};a.prototype.$22=function(){return Math.floor((1+b("Random").random())*Number.MAX_SAFE_INTEGER)};a.prototype.$24=function(){return this.$9};a.prototype.$20=function(a){__p&&__p();if(!this.$7){this.$10.debugTrace("_ensureConnected","Mqtt connection: "+a+" called when not running");return!1}if(this.$6==null){this.$10.debugTrace("_ensureConnected","Mqtt connection: "+a+" called when not connected, ignored");return!1}if(this.$11!=="Connected"){this.$10.debugTrace("_ensureConnected","Mqtt connection: "+a+" called with connection state "+this.$11);return!1}var b=this.$6.isConnected();if(!b){this.$10.debugTrace("_ensureConnected","Mqtt connection: "+a+" called with client connection state "+b);return!1}return!0};a.prototype.$25=function(a,b,c,d,e){__p&&__p();var f={};f.status=a;f.session=this.$8;f.duration=Date.now()-b;f.hostname=this.$5;f.attempt_number=this.$13;f.subscribed_topics=c.join(", ");d&&(f.errno=d);e&&(f.err_str=e);this.$10.logConnect(f)};a.prototype.$27=function(a){this.$3(a);try{this.$10.debugTrace("onSocketError",a?a.message:"socket error"),a&&this.$10.logError(a,"socket error"),this.$10.bumpCounter("js_error_in_init")}catch(a){this.$10.logError(a,"JS error while trying to log previous JS error")}};e.exports=a}),null);